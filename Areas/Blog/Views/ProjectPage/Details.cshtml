@model AspMVC.Models.ProjectPageModel

@{
    ViewData["Title"] = "Details";
    var commentVM = new CommentSectionViewModel(){ PageId = Model.Id, Comments = Model.Comments};
}

<h1>Details</h1>

<div>
    <h4>ProjectPageModel</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre.GenreName)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<div>
    <a asp-action="Download" asp-route-id="@Model?.Id">Download</a>
</div>

@{
    var pageId = Model.Id;
    await Html.RenderPartialAsync("~/Areas/Blog/Views/Shared/_CommentSection.cshtml", commentVM);
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}

